// <auto-generated />
using System;
using System.Diagnostics.CodeAnalysis;
using CadFuncionario.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace CadFuncionario.Api.Migrations
{
    [DbContext(typeof(Context))]
    [Migration("20210521114622_InitialMigration")]
    partial class InitialMigration
    {
        [ExcludeFromCodeCoverage]
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.5")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("CadFuncionario.Domain.Entities.Funcionario", b =>
                {
                    b.Property<Guid>("FuncionarioId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Cpf")
                        .IsRequired()
                        .HasColumnType("varchar(11)");

                    b.Property<string>("Ctps")
                        .IsRequired()
                        .HasColumnType("varchar(20)");

                    b.Property<DateTime?>("DataNascimento")
                        .HasColumnType("datetime2");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Rg")
                        .HasColumnType("varchar(10)");

                    b.Property<Guid>("StepProfissaoId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("FuncionarioId");

                    b.HasIndex("StepProfissaoId");

                    b.ToTable("funcionario");
                });

            modelBuilder.Entity("CadFuncionario.Domain.Entities.Profissao", b =>
                {
                    b.Property<Guid>("ProfissaoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("varchar(80)");

                    b.Property<decimal>("SalarioBase")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("ProfissaoId");

                    b.ToTable("profissao");
                });

            modelBuilder.Entity("CadFuncionario.Domain.Entities.StepProfissao", b =>
                {
                    b.Property<Guid>("StepProfissaoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("PercentualAumento")
                        .HasColumnType("decimal(18,2)");

                    b.Property<Guid>("ProfissaoId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("StepProfissaoId");

                    b.HasIndex("ProfissaoId");

                    b.ToTable("stepprofissao");
                });

            modelBuilder.Entity("CadFuncionario.Domain.Entities.Funcionario", b =>
                {
                    b.HasOne("CadFuncionario.Domain.Entities.StepProfissao", "StepProfissao")
                        .WithMany("Funcionarios")
                        .HasForeignKey("StepProfissaoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("StepProfissao");
                });

            modelBuilder.Entity("CadFuncionario.Domain.Entities.StepProfissao", b =>
                {
                    b.HasOne("CadFuncionario.Domain.Entities.Profissao", "Profissao")
                        .WithMany("StepProfissoes")
                        .HasForeignKey("ProfissaoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Profissao");
                });

            modelBuilder.Entity("CadFuncionario.Domain.Entities.Profissao", b =>
                {
                    b.Navigation("StepProfissoes");
                });

            modelBuilder.Entity("CadFuncionario.Domain.Entities.StepProfissao", b =>
                {
                    b.Navigation("Funcionarios");
                });
#pragma warning restore 612, 618
        }
    }
}
